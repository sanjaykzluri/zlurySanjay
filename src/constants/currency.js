import React from "react";
import { getValueFromLocalStorage } from "utils/localStorage";

export const currencyCodes = [
	"AED",
	"AFN",
	"ALL",
	"AMD",
	"ANG",
	"AOA",
	"ARS",
	"AUD",
	"AWG",
	"AZN",
	"BAM",
	"BBD",
	"BDT",
	"BGN",
	"BHD",
	"BIF",
	"BMD",
	"BND",
	"BOB",
	"BOV",
	"BRL",
	"BSD",
	"BTN",
	"BWP",
	"BYR",
	"BZD",
	"CAD",
	"CDF",
	"CHE",
	"CHF",
	"CHW",
	"CLF",
	"CLP",
	"CNY",
	"COP",
	"COU",
	"CRC",
	"CUC",
	"CUP",
	"CVE",
	"CZK",
	"DJF",
	"DKK",
	"DOP",
	"DZD",
	"EGP",
	"ERN",
	"ETB",
	"EUR",
	"FJD",
	"FKP",
	"GBP",
	"GEL",
	"GHS",
	"GIP",
	"GMD",
	"GNF",
	"GTQ",
	"GYD",
	"HKD",
	"HNL",
	"HRK",
	"HTG",
	"HUF",
	"IDR",
	"ILS",
	"INR",
	"IQD",
	"IRR",
	"ISK",
	"JMD",
	"JOD",
	"JPY",
	"KES",
	"KGS",
	"KHR",
	"KMF",
	"KPW",
	"KRW",
	"KWD",
	"KYD",
	"KZT",
	"LAK",
	"LBP",
	"LKR",
	"LRD",
	"LSL",
	"LTL",
	"LVL",
	"LYD",
	"MAD",
	"MDL",
	"MGA",
	"MKD",
	"MMK",
	"MNT",
	"MOP",
	"MRO",
	"MUR",
	"MVR",
	"MWK",
	"MXN",
	"MXV",
	"MYR",
	"MZN",
	"NAD",
	"NGN",
	"NIO",
	"NOK",
	"NPR",
	"NZD",
	"OMR",
	"PAB",
	"PEN",
	"PGK",
	"PHP",
	"PKR",
	"PLN",
	"PYG",
	"QAR",
	"RON",
	"RSD",
	"RUB",
	"RWF",
	"SAR",
	"SBD",
	"SCR",
	"SDG",
	"SEK",
	"SGD",
	"SHP",
	"SLL",
	"SOS",
	"SRD",
	"SSP",
	"STD",
	"SYP",
	"SZL",
	"THB",
	"TJS",
	"TMT",
	"TND",
	"TOP",
	"TRY",
	"TTD",
	"TWD",
	"TZS",
	"UAH",
	"UGX",
	"USD",
	"USN",
	"USS",
	"UYI",
	"UYU",
	"UZS",
	"VEF",
	"VND",
	"VUV",
	"WST",
	"XAF",
	"XAG",
	"XAU",
	"XBA",
	"XBB",
	"XBC",
	"XBD",
	"XCD",
	"XDR",
	"XFU",
	"XOF",
	"XPD",
	"XPF",
	"XPT",
	"XTS",
	"XXX",
	"YER",
	"ZAR",
	"ZMW",
];

export const currencySymbols = {
	AED: "د.إ",
	AFN: "؋",
	ALL: "L",
	AMD: "֏",
	ANG: "f",
	AOA: "Kz",
	ARS: "$",
	AUD: "AU$",
	AWG: "ƒ",
	AZN: "₼",
	BAM: "KM",
	BBD: "Bds$",
	BDT: "৳",
	BGN: "Лв.",
	BHD: "BD",
	BIF: "FBu",
	BMD: "$",
	BND: "B$",
	BOB: "Bs.",
	BOV: "$b",
	BRL: "R$",
	BSD: "$",
	BTN: "Nu.",
	BWP: "P",
	BYR: "p.",
	BZD: "BZ$",
	CAD: "$",
	CDF: "FC",
	CHE: "CHE",
	CHF: "₣",
	CHW: "CHW",
	CLF: "UF",
	CLP: "$",
	CNY: "¥",
	COP: "$",
	COU: "$",
	CRC: "₡",
	CUC: "₱",
	CUP: "₱",
	CVE: "$",
	CZK: "Kč",
	DJF: "Fdj",
	DKK: "kr",
	DOP: "RD$",
	DZD: "دج",
	EGP: "E£",
	ERN: "نافكا",
	ETB: "ብር",
	EUR: "€",
	FJD: "FJ$",
	FKP: "£",
	GBP: "£",
	GEL: "ლ",
	GHS: "GH¢",
	GIP: "£",
	GMD: "D",
	GNF: "GFr",
	GTQ: "Q",
	GYD: "G$",
	HKD: "HK$",
	HNL: "L",
	HRK: "kn",
	HTG: "G",
	HUF: "Ft",
	IDR: "Rp",
	ILS: "₪",
	INR: "₹",
	IQD: "ع.د",
	IRR: "﷼",
	ISK: "kr",
	JMD: "J$",
	JOD: "د.ا",
	JPY: "¥",
	KES: "/-",
	KGS: "Лв",
	KHR: "៛",
	KMF: "CF",
	KPW: "₩",
	KRW: "₩",
	KWD: "د.ك",
	KYD: "$",
	KZT: "₸",
	LAK: "₭",
	LBP: "ل.ل.",
	LKR: "රු",
	LRD: "L$",
	LSL: "M",
	LTL: "Lt",
	LVL: "Ls",
	LYD: "ل.د",
	MAD: "د.م.",
	MDL: "L",
	MGA: "Ar",
	MKD: "Ден",
	MMK: "K",
	MNT: "₮",
	MOP: "MOP$",
	MRO: "UM",
	MUR: "Rs",
	MVR: "Rf.",
	MWK: "MK",
	MXN: "Mex$",
	MXV: "MXV",
	MYR: "RM",
	MZN: "MT",
	NAD: "N$",
	NGN: "₦",
	NIO: "C$",
	NOK: "kr",
	NPR: "रु",
	NZD: "NZ$",
	OMR: "ر.ع.",
	PAB: "฿",
	PEN: "S/",
	PGK: "K",
	PHP: "₱",
	PKR: "Rs",
	PLN: "zł",
	PYG: "₲",
	QAR: "ر.ق",
	RON: "lei",
	RSD: "din",
	RUB: "₽",
	RWF: "R₣",
	SAR: "﷼",
	SBD: "Si$",
	SCR: "SRe",
	SDG: "ج.س.",
	SEK: "kr",
	SGD: "S$",
	SHP: "£",
	SLL: "Le",
	SOS: "Sh.so.",
	SRD: "Sr$",
	SSP: "SS£",
	STD: "Db",
	SYP: "£S",
	SZL: "E",
	THB: "฿",
	TJS: "SM",
	TMT: "T",
	TND: "د.ت",
	TOP: "TOP",
	TRY: "₺",
	TTD: "TT$",
	TWD: "NT$",
	TZS: "TSh",
	UAH: "₴",
	UGX: "USh",
	USD: "$",
	USN: "USN",
	USS: "USS",
	UYI: "$U",
	UYU: "$U",
	UZS: "so'm",
	VEF: "Bs.S",
	VND: "₫",
	VUV: "VT",
	WST: "SAT",
	XAF: "FCFA",
	XAG: "XAG",
	XAU: "XAU",
	XBA: "XBA",
	XBB: "XBB",
	XBC: "XBC",
	XBD: "XBD",
	XCD: "$",
	XDR: "SDR",
	XFU: "XFU",
	XOF: "CFA",
	XPD: "XPD",
	XPF: "₣",
	XPT: "XPT",
	XTS: "XTS",
	XXX: "XXX",
	YER: "﷼.",
	ZAR: "R",
	ZMW: "ZK",
	ZWL: "Z$",
};

const nonStandardSymbols = {
	BDT: "৳",
	BTN: "Nu.",
	INR: "₹",
	LKR: "රු",
	MVR: "Rf.",
	NPR: "रु",
	PKR: "Rs",
};

const SI_SYMBOL = ["", "k", "M", "B", "T", "P", "E"];
const IND_SYMBOL = ["", "k", "L", "Cr"];

export const kFormatter = (number, amountCurrency) => {
	let userInfo = getValueFromLocalStorage("userInfo");
	const currency =
		amountCurrency &&
		typeof amountCurrency === "string" &&
		currencyCodes.includes(amountCurrency?.toUpperCase())
			? amountCurrency?.toUpperCase()
			: userInfo?.org_currency;
	if (number === null || number === 0 || (isNaN(number) && currency)) {
		return currencySymbols[currency] + 0;
	}

	let isNegative = number < 0;

	number = Math.abs(number);

	var tier = (Math.log10(number) / 3) | 0;

	if (tier >= 1 && nonStandardSymbols.hasOwnProperty(currency)) {
		tier = (1 + (Math.log10(number) - 3) / 2) | 0;
	}

	if (tier === 0 && currency) {
		return (
			(isNegative ? "-" : "") +
			currencySymbols[currency] +
			Number(number?.toFixed(2))
		);
	}

	if (tier < 0 && currency) {
		return (
			(isNegative ? "-" : "") +
			currencySymbols[currency] +
			Number(number?.toFixed(5))
		);
	}

	var suffix = nonStandardSymbols.hasOwnProperty(currency)
		? tier < 4
			? IND_SYMBOL[tier]
			: "Cr"
		: tier < 7
		? SI_SYMBOL[tier]
		: "E";
	var scale = nonStandardSymbols.hasOwnProperty(currency)
		? tier < 4
			? Math.pow(10, 3 + (tier - 1) * 2)
			: Math.pow(10, 7)
		: tier < 7
		? Math.pow(10, tier * 3)
		: Math.pow(10, 18);
	var scaled = number / scale;
	return currency
		? (isNegative ? "-" : "") +
				currencySymbols[currency] +
				Number(scaled.toFixed(2)) +
				suffix
		: (isNegative ? "-" : "") + Number(scaled.toFixed(2)) + suffix;
};

export const currencyOptions = Object.keys(currencySymbols).map((currency) => (
	<option key={currency} value={currency}>
		{currency}
	</option>
));

export const currencyPeriod = {
	monthly: "m",
	yearly: "y",
	daily: "d",
	weekly: "w",
};

export const getOrgCurrency = () => {
	return getValueFromLocalStorage("userInfo").org_currency || "USD";
};
